// prettier-ignore
/* light-masonry.js v1.0.0 */
const lightMasonry=(e,t={})=>{const r=document.querySelector(e),o={};let n=!1,i=[];const s={defaultColumns:4,responsive:{1440:4,834:3,680:2},init:e=>{},afterBreakpoint:e=>{},...t},l=()=>{r.setAttribute("data-breakpoint",o.breakpoint),r.setAttribute("data-columns",o.columns)},a=()=>{r.querySelectorAll(".light-masonry-item").forEach(e=>{r.querySelector(".light-masonry-hidden-box").appendChild(e)})},d=()=>{r.querySelectorAll(".light-masonry-column").forEach(e=>{e.remove()})},c=e=>{for(let t=1;t<=e;t++)r.insertAdjacentHTML("beforeend",'<div class="light-masonry-column"></div>')},h=()=>{const e=[];r.querySelectorAll(".light-masonry-item").forEach(t=>{e.push(t.dataset.index)}),i=e.sort((e,t)=>e-t);const t=e=>{i.length&&(e.appendChild(r.querySelector(`.light-masonry-item[data-index="${i[0]}"]`)),i.shift())};for(;i.length;){r.querySelectorAll(".light-masonry-column").forEach(t)}},m=()=>{let e=s.defaultColumns;void 0!==s.responsive&&Object.keys(s.responsive).reverse().forEach(t=>{window.innerWidth>Number(t)||(o.breakpoint=Number(t),e=s.responsive[t])}),o.columns===e?(o.columns=e,n||(a(),d(),c(e),h(),l())):(o.columns=e,a(),d(),c(e),h(),l(),(e=>{n&&s.afterBreakpoint(e)})(o))};r.classList.add("light-masonry-wrapper"),Array.from(r.children).forEach(e=>{e.classList.add("light-masonry-item")}),r.querySelectorAll(".light-masonry-item").forEach((e,t)=>{e.dataset.index=t}),r.insertAdjacentHTML("beforeend",'<div class="light-masonry-hidden-box" style="display: none !important;"></div>'),m(),r.classList.add("light-masonry-initialized"),(e=>{n||(s.init(e),n=!0)})(o),window.addEventListener("resize",m)};
window.lightMasonry = lightMasonry;
export default lightMasonry;
